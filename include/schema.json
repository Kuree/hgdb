{
  "description": "JSON Schema Draft v4 format for HGDB framework",
  "title": "HGDB symbol table schema",
  "type": "object",
  "properties": {
    "generator": {
      "description": "The generator framework that produced this symbol table",
      "type": "string"
    },
    "table": {
      "description": "Main entry for symbol table files",
      "type": "array",
      "items": {
        "allOf": [
          {
            "$ref": "#/$defs/module"
          }
        ]
      }
    },
    "top": {
      "description": "Top module name",
      "type": "string"
    }
  },
  "required": [
    "table",
    "top"
  ],
  "$defs": {
    "variable": {
      "type": "object",
      "required": [
        "name",
        "value",
        "rtl"
      ],
      "properties": {
        "name": {
          "description": "The source-level name",
          "type": "string"
        },
        "value": {
          "description": "RTL signal name scoped to the parent module/interface, or a compile-time value",
          "type": "string"
        },
        "rtl": {
          "description": "If true, the value property corresponds to the RTL signal name",
          "type": "boolean"
        }
      }
    },
    "scopeEntry": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Scope entry type",
          "type": "string",
          "enum": [
            "decl",
            "module",
            "assign",
            "block",
            "none"
          ]
        },
        "line": {
          "description": "Line number. Starting from 1. 0 indicates invalid line number",
          "type": "integer",
          "minimum": 0
        },
        "column": {
          "description": "Column number. Starting from 1",
          "type": "integer",
          "minimum": 1
        },
        "condition": {
          "type": "string",
          "description": "Enable condition for this entry"
        },
        "scope": {
          "description": "Scopes contained in tentry",
          "allOf": [
            {
              "$ref": "#/$defs/scope"
            }
          ]
        },
        "variable": {
          "description": "Variable mappings defined by this entry",
          "type": "object",
          "allOf": [
            {
              "$ref": "#/$defs/variable"
            }
          ]
        },
        "variables": {
          "description": "Variables defined in the module",
          "type": "array",
          "items": {
            "allOf": [
              {
                "$ref": "#/$defs/variable"
              }
            ]
          }
        },
        "filename": {
          "description": "Filename that defines this scope",
          "type": "string"
        },
        "name": {
          "description": "Name of the entry",
          "type": "string"
        },
        "target": {
          "description": "RTL signal name",
          "type": "string"
        },
        "instances": {
          "description": "Child instances",
          "type": "array",
          "items": {
            "allOf": [
              {
                "$ref": "#/$defs/instance"
              }
            ]
          }
        }
      },
      "required": [
        "type",
        "line"
      ],
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "enum": [
                  "module"
                ]
              }
            }
          },
          "then": {
            "required": [
              "scope",
              "name",
              "variables"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "enum": [
                  "block"
                ]
              }
            }
          },
          "then": {
            "required": [
              "scope"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "enum": [
                  "decl"
                ]
              }
            }
          },
          "then": {
            "required": [
              "variable"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "enum": [
                  "assign"
                ]
              }
            }
          },
          "then": {
            "required": [
              "variable"
            ]
          }
        }
      ]
    },
    "scope": {
      "type": "array",
      "items": {
        "allOf": [
          {
            "$ref": "#/$defs/scopeEntry"
          }
        ]
      }
    },
    "fileScope": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/$defs/scopeEntry"
        }
      ],
      "required": [
        "filename"
      ],
      "properties": {
        "type": {
          "const": "block"
        }
      }
    },
    "module": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/$defs/scopeEntry"
        }
      ],
      "properties": {
        "scope": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "$ref": "#/$defs/fileScope"
              }
            ]
          }
        }
      }
    },
    "instance": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Instance name",
          "type": "string"
        },
        "module": {
          "description": "Module definition name",
          "type": "string"
        }
      },
      "required": [
        "name",
        "module"
      ]
    }
  }
}